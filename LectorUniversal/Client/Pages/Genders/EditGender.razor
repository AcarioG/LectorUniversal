@page "/genders/edit/{GenderId:int}"
@inject IRepository repository
@inject IShowMessages showMessage
@inject NavigationManager navigationManager
@*@attribute [Authorize(Roles ="admin")]*@

@if (Gender == null)
{
    <text>Cargando....</text>
}
else
{
    <GenderForm OnValidSubmit="Edit" Gender="Gender" />    
}

@code {
    [Parameter] public int GenderId { get; set; }
    private Gender Gender;

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repository.Get<Gender>($"api/genders/{GenderId}", includeToken:false);
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("genders");
            }
            else
            {
                await showMessage.ShowErrorMessage(await httpResponse.GetBody());
            }
        }
        else
        {
            Gender = httpResponse.Response;
        }

    }

    private async void Edit()
    {
        var httpResponse = await repository.Put("api/genders", Gender);
        if (httpResponse.Error)
        {
            await showMessage.ShowErrorMessage(await httpResponse.GetBody());
        }
        else
        {
            navigationManager.NavigateTo("genders");
        }
    }
}
