@page "/books/{Id:int}"
@page "/books/{Id:int}/{BookName}"
@inject IRepository repository
@inject NavigationManager navigateManager
@inject IShowMessages showMessages

<h3>DetailBook</h3>


@if (model == null)
{
    <p>Cargando..</p>
}
else
{
    <h2>@model.Book.Name</h2>
    <img src="@model.Book.Cover">
}

@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public string BookName { get; set; }
    private VisualiseBookDTO model;

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<VisualiseBookDTO>($"api/books/{Id}");

        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigateManager.NavigateTo("");
            }
            else
            {
                var ErrorMensaje = await responseHttp.GetBody();
                await showMessages.ShowErrorMessage(ErrorMensaje);
            }
        }
        else
        {
            model = responseHttp.Response;
        }

    }

}
