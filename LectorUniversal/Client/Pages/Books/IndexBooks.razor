@page "/books"
@inject IRepository repository
@inject IShowMessages showMessages

<h3>Listado de Comics</h3>
    <ListBooks Books="Books"/>

    <Pagination 
        ActualPage="ActualPage" PageSelected="PageSelected" MaxPages="MaxPages">
    </Pagination>
@code {
    private int ActualPage = 1;
    private int MaxPages;
    public List<Book> Books {get; set; }

    protected async override Task OnInitializedAsync()
    {
        await LoadBooks();
    }

    private async Task PageSelected(int page)
    {
        ActualPage = page;
        await LoadBooks(page);
    }

    private async Task LoadBooks(int page = 1)
    {
        var responseHttp = await repository.Get<List<Book>>($"api/books?page={page}", includeToken:false);
        if (!responseHttp.Error)
        {
            var count = responseHttp.HttpResponseMessage.Headers.GetValues("countRecord").FirstOrDefault();
            MaxPages = int.Parse(responseHttp.HttpResponseMessage.Headers.GetValues("TotalRecords").FirstOrDefault());
            Books = responseHttp.Response;
            StateHasChanged();
        }
    }
}
