@using System.IO
@using Tewr.Blazor.FileReader
@inject IFileReaderService fileReaderService

<div class="col-md-4">
    <label>@Label</label>
    <div>
        <input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg,.jpeg,.png"/>
    </div>
</div>

<div class="flex-wrap">
    @if (ImageBase64 != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="data:image/jpeg;base64,@ImageBase64" style="width:150px;" />
            </div>
        </div>
    }
    @if (ImageBase64 == null)
   {
       <div>
            <div style="margin:10px;">
                <img src="@ImageTemp" style="width:150px;" />
            </div>
        </div>
   }
</div>

@code {
    [Parameter] public string Label { get; set; } = "Image";
    [Parameter] public string? ImageTemp { get; set; }
    [Parameter] public EventCallback<string> ImageSelected { get; set; }
    private string? ImageBase64;
    ElementReference inputElement;

    async Task ImageFileSelected()
    {
        foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                var bytesImage = new byte[memStream.Length];
                memStream.Read(bytesImage, 0, (int)memStream.Length);
                ImageBase64 = Convert.ToBase64String(bytesImage);
                await ImageSelected.InvokeAsync(ImageBase64);
                ImageTemp = null;
                //StateHasChanged();
            }
        }
    }

}
