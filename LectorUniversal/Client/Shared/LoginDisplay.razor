@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider Auth

<AuthorizeView>
    <Authorized>
        <MudMenu AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopRight" Dense="true" >
            <ActivatorContent>
                <MudAvatar Color="Color.Primary">@context.User.Identity.Name.Substring(0,1).ToUpper()</MudAvatar>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Href="authentication/profile">Perfil</MudMenuItem>
                <MudMenuItem OnClick="BeginSignOut">Cerrar Sesion</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="Register">Registrarse</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Style="margin-left:5px;" StartIcon="@Icons.Filled.People" OnClick="Login">Login</MudButton>
    </NotAuthorized>
</AuthorizeView>

@code{

    private string? FirstLetter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authstate = await Auth.GetAuthenticationStateAsync();
        var user = authstate.User;

        if (user.Identity != null)
        {
            FirstLetter = user.Identity.Name.Substring(0,1);
        }
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private void Register()
    {
        Navigation.NavigateTo("authentication/register");
    }

    private void Login()
    {
        Navigation.NavigateTo("authentication/login");
    }
}
