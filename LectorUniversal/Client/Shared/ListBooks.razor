@inject IJSRuntime js
@inject IRepository repository
@inject IShowMessages showMessages

<div style="display: flex; flex-wrap: wrap; align-items:center;">
    <GenericList Lists="Books">
        <RecordFound Context="book" >
            <IndividualBook Books="book" DeleteBook="DeleteBook" />
        </RecordFound>
    </GenericList>
</div>

@code {
    [Parameter] public List<Book> Books { get; set; }

    async Task DeleteBook(Book book)
    {
        bool confirmed = await js.InvokeAsync<bool>("confirm", "Esta seguro que desea eliminar este Comic?");
        if (confirmed)
        {
            var responseHttp = await repository.Delete($"api/books/{book.Id}");
            if (responseHttp.Error)
            {
                await showMessages.ShowErrorMessage(await responseHttp.GetBody());
            }
            else
            {
                Books.Remove(book);
            }
            Console.WriteLine($"Se ha eliminado el comic {book.Name}");
        }
    }
}
