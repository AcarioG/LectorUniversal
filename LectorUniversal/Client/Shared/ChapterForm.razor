<EditForm Model="Chapter" OnSubmit="OnValidSubmit">
    <div class="col-md-5">
        <div class="form-group col-md-5">
            <label>Comic:</label>
            <div>
                @*<MudSelect T="selec" Label="Comics" AnchorOrigin="Origin.BottomCenter" @bind-SelectedValues=@Chapter.BooksId>
                    @foreach (var item in Books)
                    {
                        <MudSelectItem Value="@(item.Key)">@item.Value</MudSelectItem>
                    }
                </MudSelect>*@
                <InputSelect @bind-Value=@Chapter.BooksId>
                    @foreach (var item in Books)
                    {
                        <option value="@item.Key" selected="@item.Key">@item.Value</option>
                    }
                </InputSelect>
                @*<BookSelector Books="Books" ></BookSelector>*@
                @*<MudNumericField @bind-Value=@Chapter.BooksId></MudNumericField>*@
            </div>
        </div>
        <div class="form-group col-md-5">
            <label>Nombre de capitulo:</label>
            <div>
                <InputText class=form-control @bind-Value=@Chapter.Title></InputText>
            </div>
        </div>
        
        @*<div class="form-group col-md-5">
            <label>Book ID:</label>
            <div>
                <InputNumber class=form-control @bind-Value=@Chapter.></InputNumber>
            </div>
        </div>*@
        <div class="form-group col-md-5">
            <MultipleImages Label="Pages" ImageSelected="ImageSelected"/>
        </div>
        <button type="submit" class="btn btn-success">Submit</button>
        
        
        
        @*<MudPaper>        
            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.CloudUpload" Color="Color.Primary">
                Upload
            </MudButton>
            <MudChipSet AllClosable="true" OnClose="Closed">
                @foreach (var value in values)
                {
                    <MudChip Text="@value"></MudChip>
                }
            </MudChipSet>
        </MudPaper>*@

    </div>
</EditForm>

@code {
    [Parameter] public Chapter Chapter {  get;  set; }
    [Parameter] public int IdBook { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Book> BooksList { get; set; } = new List<Book>();
    private string Images;
    //private string ImageTemp;

    private List<MultipleSelectorModel> Books { get; set; } = new List<MultipleSelectorModel>();

    protected override void OnInitialized()
    {
        Books = BooksList.Select(x => new MultipleSelectorModel(x.Id.ToString(),x.Name)).ToList();
        //public void Closed(MudChip chip) => Pages.Remove();
    }

    private void ImageSelected(List<string> ImageBase64)
    {
        foreach (var item in ImageBase64)
        {
            Images = item;
        }
        
        Chapter.ChapterPages.Add(new Pages { ImageUrl = Images });
    }

    // private async Task OnDataAnnotationsValidated()
    //{
    //   // Chapter.BookId = Books.Select(x => new Chapter { BookId = int.Parse(x.Key) }).FirstOrDefault();

    //    await OnValidSubmit.InvokeAsync(null);
    //}
}
